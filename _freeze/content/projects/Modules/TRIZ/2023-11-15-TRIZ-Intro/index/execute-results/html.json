{
  "hash": "fc377875708fb5c7d86bc5af6cf1285e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TRIZ â€“ An Inventive Problem-Solving Method\"\nauthor: \"Arvind V.\"\ndate: 15/Nov/2023\nimage: images/featured.jpg\ncategories:\n  - TRIZ\ntags:\n  - TRIZ\n  - 48 TRIZ Parameters\n  - Inventive Principles\n  - Creativity Systems Model\n  - Making Metaphors\n---\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/featured.jpg){fig-align='center' width=50% height=25%}\n:::\n:::\n\n\n\n## {{< iconify emojione japanese-symbol-for-beginner >}} Introduction\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/chesterton-riddle.jpeg){fig-align='center' width=75%}\n:::\n:::\n\n\nTRIZ is a system of Inventive Problem Solving created by Genrikh\nAltshuller. Altshuller, was born in Russia in 1926, made his first\ninvention at age 14 (9th Grade), and was later educated as a mechanical\nengineer. At the time he started working on TRIZ, in 1946, he was\nemployed in the patent department of the Soviet navy, assisting\ninventors in filing their patents, in Baku, Azerbaijan. While there he\nbecame intrigued by the question of how an invention happens:\n\n> Is it a matter of luck? The result of a mental \"light bulb\" turning\n> on, as in the comics? Or can inventions be seen as the result of\n> systematic patterns of inventive thinking?\n\nAltshuller adopted an *empirical approach* to answering this question.\nHe studied thousands of patents, looking for commonalities, repetitive\npatterns, and principles of inventive thought. As he found these, he\ncodified and documented them. His results, when eventually published,\nattracted many enthusiasts who continued and expanded the work over the\nyears, reviewing what is now estimated to be more than three million\npatents worldwide. TRIZ is actively used in Companies such as Boeing,\nBridgestone, Eastman Kodak, Ford Motor Company, Harley-Davidson Motor\nCompany, Hewlett-Packard, Illinois Tool Works, Inficon, Ingersoll Rand,\nKimberly-Clark, L.G. Electronics, Lucent Technologies, Michelin,\nNational Semiconductor, NASA, Philips, Rolls-Royce, Samsung, Siemens,\nWestern Digital, and Xerox, among others.\n\nAltshuller found that the most inventive of patents did two things:\n\n1.  They stated PROBLEMS as CONTRADICTIONs (using just 48 unique\n    phrases)\n2.  These CONTRADICTIONs were resolved across a wide variety of patents\n    using an astonishingly few INVENTIVE PRINCIPLEs. (only 40 in\n    number!)\n\n## {{< iconify healthicons world-care-outline >}} There is World of Problems!\n\nLet us take our first step into the world of TRIZ. What did you think of\nimmediately when you saw the first picture on this page? You surely saw\nthe Contradiction: it *is* graffiti but claiming not to be! In TRIZ, the\nfundamental way of looking at an Inventive Design Problem is to discover\nand propose Contradictions. These are rendered in as simple and stark a\nlanguage as possible...the starker the better!\n\nWhat sort of Contradictions do we see in these familiar objects below ?\nWhat is good and what is not so good? Could that be the source of a\nproblem to solve?\n\n::: columns\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"30%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/chain.jpg){width=70% height=70%}\n:::\n:::\n\n:::\n\n::: {.column width=\"30%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/pizza.jpg){width=70% height=70%}\n:::\n:::\n\n:::\n\n::: {.column width=\"30%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/wrench.jpg){width=70% height=70%}\n:::\n:::\n\n:::\n:::\n\nContemplate and note down for each Object: Does it embody a\nCONTRADICTION?\n\nYes, each one does, in its own way: The pizza box lid collapses on the\npizza when it is hot and spoils the topping. The wrench must be turned\nby pushing against its narrower edge; we would find it easier and less\npainful if we could apply force on the broader surface of the handle.\nAnd the chain? Everyone know it needs to be stiff and strong to be able\nto pull the wheel, and yet flexible enough to go around the\nsprocket...and get horribly entangled, leading to greasy fingers!\n\nIn this way we look at OBJECTS, PROCESSES, METHODS, PRODUCTS, and indeed\nCIRCUMSTANCES to find CONTRADICTIONs!\n\nHere are some more examples in the figure below:\n\n::: columns\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![Juice](images/Juice.jpeg){width=219}\n:::\n:::\n\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![Snails](images/Snails-1.jpeg){width=65%}\n:::\n:::\n\n:::\n:::\n\nWhat could be our Contradictions here?\n\n> Fresh Juice is good for health, but ads from juice companies wish to\n> portray it as harmful, and they may not be able to sell!\n>\n> The ground is hot for a snail, but above ground it is visible to\n> predators.\n\n## {{< iconify gis position-man >}} Appreciate the Situation\n\nWe do not always contemplate only objects; indeed, as inventors, we want\nto be able to make objects or systems. What we more commonly contemplate\nis [***a situation***]{.underline}. So how does one assess a situation?\nWe might use what is called an Ishikawa Fishbone Diagram. This is shown\nbelow.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Ishikawa Fishbone Diagram](images/IshikawaDiagram.png){width=524}\n:::\n:::\n\n\nThere are many versions of this diagram depending upon the DOMAIN it is\napplied in. This diagram is very helpful to us in assessing resources\nand processes, and watching how their interplay in a situation could\nlead to...a Contradiction.\n\n## {{< iconify icon-park-outline thinking-problem >}} Determining the Administrative Contradiction\n\nIn the Ishikawa diagram, each of the items listed is considered a TRIZ\nKNOB, which is either in our control or not. By turning these KNOBs in\neither direction we can change a specific PARAMETER that the KNOB\naffects. This change may improve the situation for us but we may find\nthat something else typically gets worse. This is the source of our\nCONTRADICTION for Situations. When this happens, we can usually state a\nCONTRADICTION in simple English.\n\nFor example: `We want to boil milk, but we get bored watching it boil.`\n\nHere Time and the Milk would both have been listed in your Ishikawa as\nResources. You can further document your analysis of the Object or\nSituation using the following questionnaire 5W+H format:\n\n1.  What does the problem seem to be?\n2.  Who has the problem?\n3.  When does the problem occur? All the time? Under certain\n    circumstances?\n4.  Where does the problem occur?\n5.  Why does the problem occur? (\"Ask why 5 times\" -- W. Edwards Deming)\n6.  How does the problem occur?\n\nThis will help in \"aiming\" the solutions that TRIZ offers, in the right\nway.\n\n**STEP1**: In TRIZ, this way of expressing a Problem as a simple\nCONTRADICTION is referred to as stating an ADMINISTRATIVE CONTRADICTION\n(AC). You should be able to state an Administrative Contradiction in the\nfollowing (loose!) sentence structure --- Items in `< >` come from the\nIshikawa and your 5W + H questions).\n\n`When we, as < WHO / MANPOWER >, attempt to perform < HOW / METHOD > during <WHEN> on < WHERE / MACHINERY / KNOB>, we improve <EFFECT>, but lose out on <negative EFFECT / KNOB>`\n\n## {{< iconify pepicons-pop contract-off >}} Stating a Technical Contradiction (TC)\n\nNow that we know how problems can be stated as simple *Administrative\nContradictions (AC)*, we need to take the next step and make what TRIZ\ncalls Technical Contradictions (TC). Altshuller found that problems\nacross domains could be expressed in a \"TRIZ Language,\" a set of\nmetaphoric phrases that are an integral part of (classical) TRIZ. We\nwill call these the 48 TRIZ Parameters. Some examples of TRIZ\nParameters: *Weight of a stationary Object,* *Loss of Substance*, and\n*Temperature*.\n\nEvery problem could be described as a contradiction using some pair of\nthese 48 parameters. These metaphoric phrases are simple enough and\nprovide rich troves for imaginative problem solving. Expressing our\nspecific problem in this way allowed us to see the similarity it has\nwith problems in other domains and helps us to leverage solutions from\nthere.\n\n**STEP 2**: Take the AC and state it in terms of these 48 TRIZ\nParameters, for example:\n`Improve Loss of Substance and not worsen Weight of a Stationary Object`\n; `Improve Loss of Information and not worsen Power`\n\n## {{< iconify mdi data-matrix >}} Using the TRIZ Contradiction Matrix\n\nArmed with our TCs, we plug them into the TRIZ Contradiction Matrix. The\nTRIZ Matrix is a 48 X 48 structure, with every possible TRIZ Parameter\nbeing paired with every other TRIZ Parameter.\n\n**STEP3**: One chooses one TRIZ Parameter from the TC as the ROW and the\nother as the COLUMN in the TRIZ Matrix. At their intersection lies a\nsingle cell which contains one or more TRIZ Inventive Principles. These\nInventive Principles have been derived as solutions from hundreds and\nthousands of patents.\n\n**STEP4**: These Inventive Principles must now be applied into our\nProblem to solve it. This is the TRIZ Contradiction Matrix Workflow.\n\n## {{< iconify pajamas issue-type-test-case >}} A Complete Example\n\nLet us consider the example of the pizza box that we saw at the start of\nthis article. (We will not trouble to make the Ishikawa for this simple\nproblem) Here is our AC:\n\n`AC: The pizza needs to be hot but the steam it gives off must not make the lid collapse and ruin the pizza`\n\nWe can convert this into a TC by choosing several pairs of TRIZ\nParameters:\n\n`TC: Improve 21(Temperature) while not worsening 22(Stability)!`\n\nLooking up the [**TRIZ Contradiction\nMatrix**](https://av-quarto.netlify.app/content/materials/ContradictionMatrix2003.pdf)`(Row#21 Col#22)`,\nwe get the TRIZ Inventive Principles:\n`24: Intermediary. 35: Parameter Change, 32: Colour Change, 3: Local Quality.`\n\nLooking at `IP 24 (Intermediary`) we need to think of something between\nthe pizza and the lid, and `IP 3 ( Local Quality`) suggests that it\nshould we quite small, or \"local\" compared to the size of the pizza!\nWhat could that be? This!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Pizza Saver or Pizza Table](images/pizzatable.jpg){width=50%}\n:::\n:::\n\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\nThe TRIZ process allows us to leverage solutions that have been obtained\nfrom a vast number of patents. The TRIZ language allows us to access\nthese solutions by expressing our specific problem in terms of the TRIZ\nParameters, and leads us to the relevant TRIZ Inventive Principles which\ncan solve our problem!\n\nWorth mastering!!\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  Open Source TRIZ. \\<[TRIZ PowerTools - Free downloads ebooks pdfs\n    teaching materials\n    (opensourcetriz.com)](http://www.opensourcetriz.com/)\\>\n\n2.  Jack Hipple's\n    Webpage.<https://innovation-triz.com/personnel/JHipple.html>\n\n3.  Valeri Souchkov's Webpage.<http://www.xtriz.com/ValeriSouchkov.htm>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}